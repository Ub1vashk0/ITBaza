@model ITBaza.Models.Access

@{
    ViewData["Title"] = "Редагування доступу";
    var menu = ViewBag.AccountingMenu as List<ITBaza.Models.AccountingMenuItem>;
    var resources = ViewBag.Resources as SelectList;
    var roles = ViewBag.ResourceRoles as SelectList;
}

<div class="container">
    <div class="row">
        <div class="col-md-3">
            <partial name="_AccountingSidebar" model="@menu" />
        </div>

        <div class="col-md-9">
            <h2>@ViewData["Title"]</h2>

            <form asp-action="Edit" method="post">
                <input type="hidden" asp-for="Id" />

                <div class="row">
                    <div class="col-md-8">
                        <div class="mb-3">
                            <label asp-for="Login" class="form-label">Логін</label>
                            <input asp-for="Login" class="form-control" />
                            <span asp-validation-for="Login" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ResourceId" class="form-label">Ресурс</label>
                            <select id="resource-select" asp-for="ResourceId" asp-items="resources" class="form-select select2">
                                <option value="">Оберіть ресурс</option>
                            </select>
                            <span asp-validation-for="ResourceId" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ResourceRoleId" class="form-label">Роль ресурсу</label>
                            <select id="resource-role-select" asp-for="ResourceRoleId" asp-items="roles" class="form-select select2">
                                <option value="">Оберіть роль ресурсу</option>
                            </select>
                            <span asp-validation-for="ResourceRoleId" class="text-danger"></span>
                        </div>

                        <div class="mt-3">
                            <button type="submit" class="btn btn-primary">Зберегти</button>
                            <a asp-action="Index" class="btn btn-secondary ms-2">Назад</a>
                        </div>
                    </div>

                    <!-- Інформація про ресурс -->
                    <div class="col-md-4">
                        <div class="card border-info mt-2">
                            <div class="card-header bg-info text-white">Інформація про ресурс</div>
                            <div class="card-body" id="resource-info">
                                <p><strong>Назва:</strong> @Model.Resource?.Name</p>
                                <p><strong>Тип:</strong> @Model.Resource?.ResourceType?.Name</p>
                                <p><strong>Опис:</strong> @Model.Resource?.Description ?? "(немає)"</p>
                                <p><strong>Розташування:</strong> @Model.Resource?.MainLocation</p>
                                <p><strong>Відповідальний:</strong> @Model.Resource?.ResponsiblePerson?.LastName @Model.Resource?.ResponsiblePerson?.FirstName</p>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        initSelect2();

        document.addEventListener('DOMContentLoaded', () => {
            const resourceSelect = document.getElementById('resource-select');
            const roleSelect = document.getElementById('resource-role-select');
            const resourceInfoBox = document.getElementById('resource-info');

            function loadResourceInfo(resourceId) {
                fetch(`/api/resources/${resourceId}`)
                    .then(r => r.json())
                    .then(data => {
                        resourceInfoBox.innerHTML = `
                                    <p><strong>Назва:</strong> ${data.name}</p>
                                    <p><strong>Тип:</strong> ${data.resourceType}</p>
                                    <p><strong>Опис:</strong> ${data.description || '(немає)'}</p>
                                    <p><strong>Розташування:</strong> ${data.location}</p>
                                    <p><strong>Відповідальний:</strong> ${data.responsible}</p>
                                `;
                    })
                    .catch(() => {
                        resourceInfoBox.innerHTML = '<div class="text-danger">Не вдалося завантажити інформацію про ресурс</div>';
                    });
            }

            function loadRoles(resourceId) {
                fetch(`/api/resources/${resourceId}/roles`)
                    .then(r => r.json())
                    .then(data => {
                        roleSelect.innerHTML = '<option value="">Оберіть роль ресурсу</option>';
                        data.forEach(role => {
                            const option = document.createElement('option');
                            option.value = role.id;
                            option.textContent = role.roleName;
                            roleSelect.appendChild(option);
                        });
                        $(roleSelect).val(@Model.ResourceRoleId).trigger('change'); // встановлює попереднє значення
                    });
            }

            // Подія при виборі ресурсу
            $(resourceSelect).on('select2:select', function (e) {
                const resourceId = e.params.data.id;
                loadResourceInfo(resourceId);
                loadRoles(resourceId);
            });

            // Ініціалізація при завантаженні сторінки
            const selectedResourceId = resourceSelect.value;
            if (selectedResourceId) {
                loadResourceInfo(selectedResourceId);
            }
        });
    </script>
}
